<?php return array (
  'unique_key' => 'category',
  'preserve_keys' => false,
  'update_object' => true,
  'related_objects' => 
  array (
    'Chunks' => 
    array (
      '85476ae4ebcded445285d5748c8f159d' => 
      array (
        'preserve_keys' => false,
        'update_object' => true,
        'unique_key' => 'name',
        'class' => 'modChunk',
        'object' => '{"id":null,"source":0,"property_preprocess":0,"name":"recaptchav2_html","description":"","editor_type":0,"category":0,"cache_type":0,"snippet":"<div class=\\"g-recaptcha\\" data-sitekey=\\"[[+site_key]]\\"><\\/div>\\n<script type=\\"text\\/javascript\\" src=\\"https:\\/\\/www.google.com\\/recaptcha\\/api.js?hl=[[++cultureKey]]\\"><\\/script>","locked":0,"properties":"a:0:{}","static":0,"static_file":"","content":"<div class=\\"g-recaptcha\\" data-sitekey=\\"[[+site_key]]\\"><\\/div>\\n<script type=\\"text\\/javascript\\" src=\\"https:\\/\\/www.google.com\\/recaptcha\\/api.js?hl=[[++cultureKey]]\\"><\\/script>"}',
        'guid' => 'cde41ce8034d75ecc08539b98cf88f86',
        'native_key' => NULL,
        'signature' => 'a4898e06971a1816e1aeb05f5931902b',
      ),
      '213c02d8b1ab55933338a1761bfdda95' => 
      array (
        'preserve_keys' => false,
        'update_object' => true,
        'unique_key' => 'name',
        'class' => 'modChunk',
        'object' => '{"id":null,"source":0,"property_preprocess":0,"name":"recaptchav2_invisible_html","description":"","editor_type":0,"category":0,"cache_type":0,"snippet":"<script type=\\"text\\/javascript\\" src=\\"https:\\/\\/www.google.com\\/recaptcha\\/api.js?hl=[[++cultureKey]]\\"><\\/script>\\n<script>function recaptchaV2SubmitForm(response){return new Promise(function(){document.getElementById(\'[[+form_id]]\').submit();})}<\\/script>\\n<button type=\\"submit\\" class=\\"g-recaptcha\\" name=\\"login\\" data-sitekey=\\"[[+site_key]]\\" data-callback=\\"recaptchaV2SubmitForm\\">Login<\\/button>","locked":0,"properties":"a:0:{}","static":0,"static_file":"","content":"<script type=\\"text\\/javascript\\" src=\\"https:\\/\\/www.google.com\\/recaptcha\\/api.js?hl=[[++cultureKey]]\\"><\\/script>\\n<script>function recaptchaV2SubmitForm(response){return new Promise(function(){document.getElementById(\'[[+form_id]]\').submit();})}<\\/script>\\n<button type=\\"submit\\" class=\\"g-recaptcha\\" name=\\"login\\" data-sitekey=\\"[[+site_key]]\\" data-callback=\\"recaptchaV2SubmitForm\\">Login<\\/button>"}',
        'guid' => 'e8d6982dd5dec82ce13a29e7dcd70e7d',
        'native_key' => NULL,
        'signature' => '87d51c4e09ff97ca9007d99032feb8f5',
      ),
      'f3ea63860e8dfca72861f98d102c04f5' => 
      array (
        'preserve_keys' => false,
        'update_object' => true,
        'unique_key' => 'name',
        'class' => 'modChunk',
        'object' => '{"id":null,"source":0,"property_preprocess":0,"name":"sample_formit_contact_form","description":"","editor_type":0,"category":0,"cache_type":0,"snippet":"[[!FormIt?\\n   &hooks=`recaptchav2,email`\\n   &emailTpl=`sample_formit_contact_eml`\\n   &emailTo=`[[++emailsender]]`\\n   &emailSubject=`Contact from website`\\n   &validate=`name:required,\\n      email:email:required,\\n      text:stripTags`\\n   &successMessage=`<p class=\\"button success\\">Success! Your enquiry has been sent.<\\/p>`\\n]]\\n    <div class=\\"sample_formit_contact_form\\">\\n        <h3>Contact Us<\\/h3>\\n        [[!+fi.validation_error_message:notempty=`<div class=\\"label alert\\">[[!+fi.validation_error_message]]<\\/div>`]]\\n        [[!+fi.successMessage]]\\n        <form action=\\"[[~[[*id]]]]\\" method=\\"post\\" class=\\"contact-form\\">\\n            <div class=\\"form-item\\">\\n                <label for=\\"name\\">\\n                    Name: *\\n                    [[!+fi.error.name:notempty=`<span class=\\"error\\">[[!+fi.error.name]]<\\/span>`]]\\n                <\\/label>\\n                <input type=\\"text\\" name=\\"name\\" id=\\"name\\" value=\\"[[!+fi.name]]\\" \\/>\\n            <\\/div>\\n            <div class=\\"form-item\\">\\n                <label for=\\"email\\">\\n                    Email: *\\n                    [[!+fi.error.email:notempty=`<span class=\\"error\\">[[!+fi.error.email]]<\\/span>`]]\\n                <\\/label>\\n                <input type=\\"text\\" name=\\"email\\" id=\\"email\\" value=\\"[[!+fi.email]]\\" \\/>\\n            <\\/div>\\n            <div class=\\"form-item\\">\\n                <label for=\\"text\\">\\n                    Message:\\n                    [[!+fi.error.text:notempty=`<span class=\\"error\\">[[!+fi.error.text]]<\\/span>`]]\\n                <\\/label>\\n                <textarea name=\\"text\\" id=\\"text\\" value=\\"[[!+fi.text]]\\">[[!+fi.text]]<\\/textarea>\\n            <\\/div>\\n            <div class=\\"form-item\\">\\n                [[!recaptchav2_render]]\\n                [[!+fi.error.recaptchav2_error]]\\n            <\\/div>\\n            <div class=\\"form-button\\">\\n                <input type=\\"submit\\" value=\\"Send\\" class=\\"button\\" \\/>\\n            <\\/div>\\n        <\\/form>\\n    <\\/div>","locked":0,"properties":"a:0:{}","static":0,"static_file":"","content":"[[!FormIt?\\n   &hooks=`recaptchav2,email`\\n   &emailTpl=`sample_formit_contact_eml`\\n   &emailTo=`[[++emailsender]]`\\n   &emailSubject=`Contact from website`\\n   &validate=`name:required,\\n      email:email:required,\\n      text:stripTags`\\n   &successMessage=`<p class=\\"button success\\">Success! Your enquiry has been sent.<\\/p>`\\n]]\\n    <div class=\\"sample_formit_contact_form\\">\\n        <h3>Contact Us<\\/h3>\\n        [[!+fi.validation_error_message:notempty=`<div class=\\"label alert\\">[[!+fi.validation_error_message]]<\\/div>`]]\\n        [[!+fi.successMessage]]\\n        <form action=\\"[[~[[*id]]]]\\" method=\\"post\\" class=\\"contact-form\\">\\n            <div class=\\"form-item\\">\\n                <label for=\\"name\\">\\n                    Name: *\\n                    [[!+fi.error.name:notempty=`<span class=\\"error\\">[[!+fi.error.name]]<\\/span>`]]\\n                <\\/label>\\n                <input type=\\"text\\" name=\\"name\\" id=\\"name\\" value=\\"[[!+fi.name]]\\" \\/>\\n            <\\/div>\\n            <div class=\\"form-item\\">\\n                <label for=\\"email\\">\\n                    Email: *\\n                    [[!+fi.error.email:notempty=`<span class=\\"error\\">[[!+fi.error.email]]<\\/span>`]]\\n                <\\/label>\\n                <input type=\\"text\\" name=\\"email\\" id=\\"email\\" value=\\"[[!+fi.email]]\\" \\/>\\n            <\\/div>\\n            <div class=\\"form-item\\">\\n                <label for=\\"text\\">\\n                    Message:\\n                    [[!+fi.error.text:notempty=`<span class=\\"error\\">[[!+fi.error.text]]<\\/span>`]]\\n                <\\/label>\\n                <textarea name=\\"text\\" id=\\"text\\" value=\\"[[!+fi.text]]\\">[[!+fi.text]]<\\/textarea>\\n            <\\/div>\\n            <div class=\\"form-item\\">\\n                [[!recaptchav2_render]]\\n                [[!+fi.error.recaptchav2_error]]\\n            <\\/div>\\n            <div class=\\"form-button\\">\\n                <input type=\\"submit\\" value=\\"Send\\" class=\\"button\\" \\/>\\n            <\\/div>\\n        <\\/form>\\n    <\\/div>"}',
        'guid' => '86152d1b1427c6f4e2b34b84750787f3',
        'native_key' => NULL,
        'signature' => '1ad73a415ebf03cb45c5fa7f08af8a56',
      ),
      '303331c5b122971ae4e10dbbdff9062f' => 
      array (
        'preserve_keys' => false,
        'update_object' => true,
        'unique_key' => 'name',
        'class' => 'modChunk',
        'object' => '{"id":null,"source":0,"property_preprocess":0,"name":"sample_formit_contact_eml","description":"","editor_type":0,"category":0,"cache_type":0,"snippet":"Contact from the website:<br \\/>\\n[[+name]] ([[+email]]) wrote: <br \\/>\\n \\n[[+text]]","locked":0,"properties":"a:0:{}","static":0,"static_file":"","content":"Contact from the website:<br \\/>\\n[[+name]] ([[+email]]) wrote: <br \\/>\\n \\n[[+text]]"}',
        'guid' => '84a87869f1f651e695d408922487946f',
        'native_key' => NULL,
        'signature' => '44cdb0b498ab48232786c956063b0591',
      ),
      '2ac2035330ab35f76aa9ae0cc0c5eb0a' => 
      array (
        'preserve_keys' => false,
        'update_object' => true,
        'unique_key' => 'name',
        'class' => 'modChunk',
        'object' => '{"id":null,"source":0,"property_preprocess":0,"name":"recaptchav3_html","description":"","editor_type":0,"category":0,"cache_type":0,"snippet":"<script src=\\"https:\\/\\/www.google.com\\/recaptcha\\/api.js?render=[[+site_key]]&hl=[[++cultureKey]]\\"><\\/script>\\n<input type=\\"hidden\\" name=\\"[[+token_key]]\\">\\n<input type=\\"hidden\\" name=\\"[[+action_key]]\\" value=\\"[[+form_id]]\\">\\n<script>\\n    grecaptcha.ready(function() {\\n        grecaptcha.execute(\'[[+site_key]]\', {action: \'[[+form_id]]\'}).then(function(token) {\\n            document.querySelector(\'[name=\\"[[+token_key]]\\"]\').value = token;\\n        });\\n    });\\n<\\/script>\\n","locked":0,"properties":"a:0:{}","static":0,"static_file":"","content":"<script src=\\"https:\\/\\/www.google.com\\/recaptcha\\/api.js?render=[[+site_key]]&hl=[[++cultureKey]]\\"><\\/script>\\n<input type=\\"hidden\\" name=\\"[[+token_key]]\\">\\n<input type=\\"hidden\\" name=\\"[[+action_key]]\\" value=\\"[[+form_id]]\\">\\n<script>\\n    grecaptcha.ready(function() {\\n        grecaptcha.execute(\'[[+site_key]]\', {action: \'[[+form_id]]\'}).then(function(token) {\\n            document.querySelector(\'[name=\\"[[+token_key]]\\"]\').value = token;\\n        });\\n    });\\n<\\/script>\\n"}',
        'guid' => '68541027a0fb69aa51db4a6323e55abe',
        'native_key' => NULL,
        'signature' => 'd4f9117de8fcb156999fb6aa34b05c46',
      ),
    ),
    'Snippets' => 
    array (
      'aa52ef0d35de1a720db1565f2a67c7a2' => 
      array (
        'preserve_keys' => false,
        'update_object' => true,
        'unique_key' => 'name',
        'class' => 'modSnippet',
        'object' => '{"id":null,"source":0,"property_preprocess":0,"name":"recaptchav2","description":"","editor_type":0,"category":0,"cache_type":0,"snippet":"\\/**\\n * Based on https:\\/\\/github.com\\/google\\/recaptcha\\n *\\n * @copyright Copyright (c) 2014, Google Inc.\\n * @link      http:\\/\\/www.google.com\\/recaptcha\\n *\\n * Ported to MODX by YJ Tso @sepiariver\\n * \\n * Permission is hereby granted, free of charge, to any person obtaining a copy\\n * of this software and associated documentation files (the \\"Software\\"), to deal\\n * in the Software without restriction, including without limitation the rights\\n * to use, copy, modify, merge, publish, distribute, sublicense, and\\/or sell\\n * copies of the Software, and to permit persons to whom the Software is\\n * furnished to do so, subject to the following conditions:\\n *\\n * The above copyright notice and this permission notice shall be included in\\n * all copies or substantial portions of the Software.\\n *\\n * THE SOFTWARE IS PROVIDED \\"AS IS\\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\\n * THE SOFTWARE.\\n *\\/\\n\\n\\/\\/ Register API keys at https:\\/\\/www.google.com\\/recaptcha\\/admin\\n$site_key = $modx->getOption(\'recaptchav2.site_key\', null, \'\');\\n$secret = $modx->getOption(\'recaptchav2.secret_key\', null, \'\');\\n\\/\\/ reCAPTCHA supported 40+ languages listed here: https:\\/\\/developers.google.com\\/recaptcha\\/docs\\/language\\n$lang = $modx->getOption(\'cultureKey\', null, \'en\');\\n\\n\\/\\/ Options\\nif ($hook->formit) {\\n    $properties = array_merge(array(), $hook->formit->config);\\n}\\n\\n\\/\\/ make sure the modLexicon class is loaded by instantiating \\n$modx->getService(\'lexicon\',\'modLexicon\');\\n\\/\\/ load lexicon\\n$modx->lexicon->load(\'recaptchav2:default\');\\n\\/\\/ get the message from default.inc.php from the correct lang\\n$tech_err_msg = $modx->lexicon(\'recaptchav2.technical_error_message\');\\n$recaptcha_err_msg = $modx->lexicon(\'recaptchav2.recaptcha_error_message\');\\n\\n\\/\\/ Get the class\\n$recaptchav2Path = $modx->getOption(\'recaptchav2.core_path\', null, $modx->getOption(\'core_path\') . \'components\\/recaptchav2\\/\');\\n$recaptchav2Path .= \'model\\/recaptchav2\\/\';\\nif (!file_exists($recaptchav2Path . \'autoload.php\')) {\\n    $modx->log(modX::LOG_LEVEL_WARN, \'Cannot find required RecaptchaV2 autoload.php file.\'); \\n    return false;\\n}\\nrequire_once($recaptchav2Path . \'autoload.php\');\\n$recaptchav2 = new \\\\ReCaptcha\\\\ReCaptcha($secret, new \\\\ReCaptcha\\\\RequestMethod\\\\CurlPost());\\nif (!($recaptchav2 instanceof \\\\ReCaptcha\\\\ReCaptcha)) {\\n    $hook->addError(\'recaptchav2_error\', $tech_err_msg);\\n    $modx->log(modX::LOG_LEVEL_WARN, \'Failed to load recaptchav2 class.\'); \\n    return false;\\n}\\n\\n\\/\\/ The response from reCAPTCHA\\n$resp = null;\\n\\/\\/ The error code from reCAPTCHA, if any\\n$error = null;\\n\\/\\/ Check if being used as hook\\nif (isset($hook)){\\n\\/\\/ Was there a reCAPTCHA response?\\n    if ($hook->getValue(\'g-recaptcha-response\')) {\\n        $resp = $recaptchav2->verify($hook->getValue(\'g-recaptcha-response\'), $_SERVER[\\"REMOTE_ADDR\\"]);\\n    }\\n\\n\\/\\/ Hook pass\\/fail\\n    if ($resp != null && $resp->isSuccess()) {\\n        return true;\\n    } else {\\n        $hook->addError(\'recaptchav2_error\', $recaptcha_err_msg);\\n        $modx->log(modX::LOG_LEVEL_DEBUG, print_r($resp, true));\\n        return false;\\n    }\\n}\\n\\/\\/ Check if being used as validator\\nif (isset($validator)) {\\n\\/\\/ Was there a reCAPTCHA response?\\n    if (isset($value)) {\\n        $resp = $recaptchav2->verify($value, $_SERVER[\\"REMOTE_ADDR\\"]);\\n    }\\n\\n\\/\\/ Validator pass\\/fail\\n    if ($resp != null && $resp->isSuccess()) {\\n        return true;\\n    } else {\\n        $validator->addError($key, $recaptcha_err_msg);\\n        $modx->log(modX::LOG_LEVEL_DEBUG, print_r($resp, true));\\n        return $success;\\n    }\\n\\n\\n}\\n\\n\\/\\/ Checks failed\\nreturn false;","locked":0,"properties":"a:0:{}","moduleguid":"","static":0,"static_file":"","content":"\\/**\\n * Based on https:\\/\\/github.com\\/google\\/recaptcha\\n *\\n * @copyright Copyright (c) 2014, Google Inc.\\n * @link      http:\\/\\/www.google.com\\/recaptcha\\n *\\n * Ported to MODX by YJ Tso @sepiariver\\n * \\n * Permission is hereby granted, free of charge, to any person obtaining a copy\\n * of this software and associated documentation files (the \\"Software\\"), to deal\\n * in the Software without restriction, including without limitation the rights\\n * to use, copy, modify, merge, publish, distribute, sublicense, and\\/or sell\\n * copies of the Software, and to permit persons to whom the Software is\\n * furnished to do so, subject to the following conditions:\\n *\\n * The above copyright notice and this permission notice shall be included in\\n * all copies or substantial portions of the Software.\\n *\\n * THE SOFTWARE IS PROVIDED \\"AS IS\\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\\n * THE SOFTWARE.\\n *\\/\\n\\n\\/\\/ Register API keys at https:\\/\\/www.google.com\\/recaptcha\\/admin\\n$site_key = $modx->getOption(\'recaptchav2.site_key\', null, \'\');\\n$secret = $modx->getOption(\'recaptchav2.secret_key\', null, \'\');\\n\\/\\/ reCAPTCHA supported 40+ languages listed here: https:\\/\\/developers.google.com\\/recaptcha\\/docs\\/language\\n$lang = $modx->getOption(\'cultureKey\', null, \'en\');\\n\\n\\/\\/ Options\\nif ($hook->formit) {\\n    $properties = array_merge(array(), $hook->formit->config);\\n}\\n\\n\\/\\/ make sure the modLexicon class is loaded by instantiating \\n$modx->getService(\'lexicon\',\'modLexicon\');\\n\\/\\/ load lexicon\\n$modx->lexicon->load(\'recaptchav2:default\');\\n\\/\\/ get the message from default.inc.php from the correct lang\\n$tech_err_msg = $modx->lexicon(\'recaptchav2.technical_error_message\');\\n$recaptcha_err_msg = $modx->lexicon(\'recaptchav2.recaptcha_error_message\');\\n\\n\\/\\/ Get the class\\n$recaptchav2Path = $modx->getOption(\'recaptchav2.core_path\', null, $modx->getOption(\'core_path\') . \'components\\/recaptchav2\\/\');\\n$recaptchav2Path .= \'model\\/recaptchav2\\/\';\\nif (!file_exists($recaptchav2Path . \'autoload.php\')) {\\n    $modx->log(modX::LOG_LEVEL_WARN, \'Cannot find required RecaptchaV2 autoload.php file.\'); \\n    return false;\\n}\\nrequire_once($recaptchav2Path . \'autoload.php\');\\n$recaptchav2 = new \\\\ReCaptcha\\\\ReCaptcha($secret, new \\\\ReCaptcha\\\\RequestMethod\\\\CurlPost());\\nif (!($recaptchav2 instanceof \\\\ReCaptcha\\\\ReCaptcha)) {\\n    $hook->addError(\'recaptchav2_error\', $tech_err_msg);\\n    $modx->log(modX::LOG_LEVEL_WARN, \'Failed to load recaptchav2 class.\'); \\n    return false;\\n}\\n\\n\\/\\/ The response from reCAPTCHA\\n$resp = null;\\n\\/\\/ The error code from reCAPTCHA, if any\\n$error = null;\\n\\/\\/ Check if being used as hook\\nif (isset($hook)){\\n\\/\\/ Was there a reCAPTCHA response?\\n    if ($hook->getValue(\'g-recaptcha-response\')) {\\n        $resp = $recaptchav2->verify($hook->getValue(\'g-recaptcha-response\'), $_SERVER[\\"REMOTE_ADDR\\"]);\\n    }\\n\\n\\/\\/ Hook pass\\/fail\\n    if ($resp != null && $resp->isSuccess()) {\\n        return true;\\n    } else {\\n        $hook->addError(\'recaptchav2_error\', $recaptcha_err_msg);\\n        $modx->log(modX::LOG_LEVEL_DEBUG, print_r($resp, true));\\n        return false;\\n    }\\n}\\n\\/\\/ Check if being used as validator\\nif (isset($validator)) {\\n\\/\\/ Was there a reCAPTCHA response?\\n    if (isset($value)) {\\n        $resp = $recaptchav2->verify($value, $_SERVER[\\"REMOTE_ADDR\\"]);\\n    }\\n\\n\\/\\/ Validator pass\\/fail\\n    if ($resp != null && $resp->isSuccess()) {\\n        return true;\\n    } else {\\n        $validator->addError($key, $recaptcha_err_msg);\\n        $modx->log(modX::LOG_LEVEL_DEBUG, print_r($resp, true));\\n        return $success;\\n    }\\n\\n\\n}\\n\\n\\/\\/ Checks failed\\nreturn false;"}',
        'guid' => 'f4837dcaea3f9811667f13ea512e7943',
        'native_key' => NULL,
        'signature' => '15c2b09c81ef4a39ce3bbc2d820d63ad',
      ),
      '5e7760fe15be2189f590692875326df6' => 
      array (
        'preserve_keys' => false,
        'update_object' => true,
        'unique_key' => 'name',
        'class' => 'modSnippet',
        'object' => '{"id":null,"source":0,"property_preprocess":0,"name":"recaptchav2_render","description":"","editor_type":0,"category":0,"cache_type":0,"snippet":"\\/**\\n * Renders ReCaptcha V2 form\\n *\\n * Based on https:\\/\\/github.com\\/google\\/ReCAPTCHA\\/tree\\/master\\/php\\n *\\n * @copyright Copyright (c) 2014, Google Inc.\\n * @link      http:\\/\\/www.google.com\\/recaptcha\\n *\\n * Ported to MODX by YJ Tso @sepiariver\\n *\\n * Permission is hereby granted, free of charge, to any person obtaining a copy\\n * of this software and associated documentation files (the \\"Software\\"), to deal\\n * in the Software without restriction, including without limitation the rights\\n * to use, copy, modify, merge, publish, distribute, sublicense, and\\/or sell\\n * copies of the Software, and to permit persons to whom the Software is\\n * furnished to do so, subject to the following conditions:\\n *\\n * The above copyright notice and this permission notice shall be included in\\n * all copies or substantial portions of the Software.\\n *\\n * THE SOFTWARE IS PROVIDED \\"AS IS\\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\\n * THE SOFTWARE.\\n *\\/\\n\\n\\/\\/ Register API keys at https:\\/\\/www.google.com\\/recaptcha\\/admin\\n$site_key = $modx->getOption(\'recaptchav2.site_key\', null, \'\');\\n\\/\\/ reCAPTCHA supported 40+ languages listed here: https:\\/\\/developers.google.com\\/recaptcha\\/docs\\/language\\n$lang = $modx->getOption(\'cultureKey\', null, \'en\', true);\\n\\/\\/ use \'recaptchav2_invisible_html\' inside form element for invisible recaptcha\\n$tpl = $modx->getOption(\'tpl\', $scriptProperties, \'recaptchav2_html\', true);\\n$form_id = $modx->getOption(\'form_id\', $scriptProperties, \'\');\\n\\n$recaptcha_html = $modx->getChunk($tpl, array(\\n    \'site_key\' => $site_key,\\n    \'lang\' => $lang,\\n    \'form_id\' => $form_id,\\n    ));\\n\\nif ($hook) { \\n    $hook->setValue(\'recaptchav2_html\', $recaptcha_html); \\/\\/ This won\'t re-render on page reload there\'s validation errors\\n    return true;\\n} else { \\/\\/ This works at least\\n    return $recaptcha_html;\\n}","locked":0,"properties":"a:0:{}","moduleguid":"","static":0,"static_file":"","content":"\\/**\\n * Renders ReCaptcha V2 form\\n *\\n * Based on https:\\/\\/github.com\\/google\\/ReCAPTCHA\\/tree\\/master\\/php\\n *\\n * @copyright Copyright (c) 2014, Google Inc.\\n * @link      http:\\/\\/www.google.com\\/recaptcha\\n *\\n * Ported to MODX by YJ Tso @sepiariver\\n *\\n * Permission is hereby granted, free of charge, to any person obtaining a copy\\n * of this software and associated documentation files (the \\"Software\\"), to deal\\n * in the Software without restriction, including without limitation the rights\\n * to use, copy, modify, merge, publish, distribute, sublicense, and\\/or sell\\n * copies of the Software, and to permit persons to whom the Software is\\n * furnished to do so, subject to the following conditions:\\n *\\n * The above copyright notice and this permission notice shall be included in\\n * all copies or substantial portions of the Software.\\n *\\n * THE SOFTWARE IS PROVIDED \\"AS IS\\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\\n * THE SOFTWARE.\\n *\\/\\n\\n\\/\\/ Register API keys at https:\\/\\/www.google.com\\/recaptcha\\/admin\\n$site_key = $modx->getOption(\'recaptchav2.site_key\', null, \'\');\\n\\/\\/ reCAPTCHA supported 40+ languages listed here: https:\\/\\/developers.google.com\\/recaptcha\\/docs\\/language\\n$lang = $modx->getOption(\'cultureKey\', null, \'en\', true);\\n\\/\\/ use \'recaptchav2_invisible_html\' inside form element for invisible recaptcha\\n$tpl = $modx->getOption(\'tpl\', $scriptProperties, \'recaptchav2_html\', true);\\n$form_id = $modx->getOption(\'form_id\', $scriptProperties, \'\');\\n\\n$recaptcha_html = $modx->getChunk($tpl, array(\\n    \'site_key\' => $site_key,\\n    \'lang\' => $lang,\\n    \'form_id\' => $form_id,\\n    ));\\n\\nif ($hook) { \\n    $hook->setValue(\'recaptchav2_html\', $recaptcha_html); \\/\\/ This won\'t re-render on page reload there\'s validation errors\\n    return true;\\n} else { \\/\\/ This works at least\\n    return $recaptcha_html;\\n}"}',
        'guid' => 'd4e1dc1bf5892e712935448acf76c84e',
        'native_key' => NULL,
        'signature' => '534dde06f8c07a1d856531ca83af880e',
      ),
      'c37da642bddd2ee8e6b26bfac8f4c298' => 
      array (
        'preserve_keys' => false,
        'update_object' => true,
        'unique_key' => 'name',
        'class' => 'modSnippet',
        'object' => '{"id":null,"source":0,"property_preprocess":0,"name":"recaptchav3","description":"","editor_type":0,"category":0,"cache_type":0,"snippet":"\\/**\\n * recaptchav3 hook for use with MODX form processors\\n *\\n * Based on https:\\/\\/github.com\\/google\\/recaptcha\\n *\\n * @copyright Copyright (c) 2014, Google Inc.\\n * @link      http:\\/\\/www.google.com\\/recaptcha\\n *\\n * Ported to MODX by YJ Tso @sepiariver\\n *\\n * Permission is hereby granted, free of charge, to any person obtaining a copy\\n * of this software and associated documentation files (the \\"Software\\"), to deal\\n * in the Software without restriction, including without limitation the rights\\n * to use, copy, modify, merge, publish, distribute, sublicense, and\\/or sell\\n * copies of the Software, and to permit persons to whom the Software is\\n * furnished to do so, subject to the following conditions:\\n *\\n * The above copyright notice and this permission notice shall be included in\\n * all copies or substantial portions of the Software.\\n *\\n * THE SOFTWARE IS PROVIDED \\"AS IS\\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\\n * THE SOFTWARE.\\n *\\/\\n\\n\\/\\/ Require hook object\\nif (!$hook) {\\n    $modx->log(modX::LOG_LEVEL_ERROR, \'RecaptchaV3 requires hook object.\');\\n    return;\\n}\\n\\n\\/\\/ Register API keys at https:\\/\\/www.google.com\\/recaptcha\\/admin\\n$props[\'site_key\'] = $modx->getOption(\'recaptchav3.site_key\', null, \'\');\\n$props[\'secret_key\'] = $modx->getOption(\'recaptchav3.secret_key\', null, \'\');\\n\\/\\/ reCAPTCHA supported 40+ languages listed here: https:\\/\\/developers.google.com\\/recaptcha\\/docs\\/language\\n$props[\'lang\'] = $modx->getOption(\'cultureKey\', null, \'en\');\\n\\/\\/ https:\\/\\/developers.google.com\\/recaptcha\\/docs\\/v3 \\"Actions\\"\\n$props[\'action_key\'] = $modx->getOption(\'recaptchav3.action_key\', null, \'recaptcha-action\', true);\\n$props[\'token_key\'] = $modx->getOption(\'recaptchav3.token_key\', null, \'recaptcha-token\', true);\\n\\n\\/\\/ Options\\n$hookConfig = [];\\nif ($hook->formit) {\\n    $hookConfig = $hook->formit->config;\\n} elseif ($hook->login) {\\n    $hookConfig = $hook->login->controller->config;\\n}\\nforeach ($hookConfig as $k => $v) {\\n    if (strpos($k, \'recaptchav3.\') === 0) {\\n        $k = substr($k, 12);\\n        $props[$k] = $v;\\n    }\\n}\\n\\n\\/\\/ Defaults\\n$props[\'threshold\'] = floatval($modx->getOption(\'threshold\', $props, 0.5, true));\\n$props[\'display_resp_errors\'] = $modx->getOption(\'display_resp_errors\', $props, true);\\n$props[\'ip\'] = $modx->getOption(\'HTTP_CF_CONNECTING_IP\', $_SERVER, $_SERVER[\'REMOTE_ADDR\'], true);\\n\\n\\/\\/ make sure the modLexicon class is loaded by instantiating\\n$modx->getService(\'lexicon\',\'modLexicon\');\\n\\/\\/ load lexicon\\n$modx->lexicon->load(\'recaptchav2:default\');\\n\\/\\/ get the message from default.inc.php from the correct lang\\n$tech_err_msg = $modx->lexicon(\'recaptchav2.technical_error_message\');\\n$recaptcha_err_msg = $modx->lexicon(\'recaptchav2.recaptchav3_error_message\');\\n\\n\\/\\/ Get the class\\n$recaptchaPath = $modx->getOption(\'recaptchav2.core_path\', null, $modx->getOption(\'core_path\') . \'components\\/recaptchav2\\/\');\\n$recaptchaPath .= \'model\\/recaptchav2\\/\';\\nif (!file_exists($recaptchaPath . \'autoload.php\')) {\\n    $modx->log(modX::LOG_LEVEL_ERROR, \'Cannot find required Recaptcha autoload.php file.\');\\n    return false;\\n}\\nrequire_once($recaptchaPath . \'autoload.php\');\\ntry {\\n    $recaptcha = new \\\\ReCaptcha\\\\ReCaptcha($props[\'secret_key\'], new \\\\ReCaptcha\\\\RequestMethod\\\\CurlPost());\\n} catch (Exception $e) {\\n    $modx->log(modX::LOG_LEVEL_ERROR, \'Failed to load Recaptcha class.\');\\n    return false;\\n}\\n\\nif (!($recaptcha instanceof \\\\ReCaptcha\\\\ReCaptcha)) {\\n    $hook->addError(\'recaptchav3_error\', $tech_err_msg);\\n    $modx->log(modX::LOG_LEVEL_ERROR, \'Failed to load Recaptcha class.\');\\n    return false;\\n}\\n\\n\\/\\/ The response from reCAPTCHA\\n$resp = null;\\n\\/\\/ The error code from reCAPTCHA, if any\\n$error = null;\\n\\n\\/\\/ Was there a reCAPTCHA response?\\nif ($hook->getValue($props[\'token_key\'])) {\\n    $resp = $recaptcha->setExpectedHostname(parse_url($modx->getOption(\'site_url\'), PHP_URL_HOST))\\n              ->setExpectedAction($hook->getValue($props[\'action_key\']))\\n              ->setScoreThreshold($props[\'threshold\'])\\n              ->verify($hook->getValue($props[\'token_key\']), $props[\'ip\']);\\n\\n}\\n\\n\\/\\/ Hook pass\\/fail\\nif ($resp != null && $resp->isSuccess()) {\\n    return true;\\n} else {\\n    $msg = \'\';\\n    if ($props[\'display_resp_errors\']) {\\n        foreach ($resp->getErrorCodes() as $error) {\\n            $msg .= $error . \\"\\\\n\\";\\n        }\\n    }\\n    if (empty($msg)) $msg = $recaptcha_err_msg;\\n    $hook->addError(\'recaptchav3_error\', $msg);\\n    $modx->log(modX::LOG_LEVEL_DEBUG, print_r($resp, true));\\n    return false;\\n}\\n\\n\\n\\/\\/ Checks failed\\nreturn false;","locked":0,"properties":"a:0:{}","moduleguid":"","static":0,"static_file":"","content":"\\/**\\n * recaptchav3 hook for use with MODX form processors\\n *\\n * Based on https:\\/\\/github.com\\/google\\/recaptcha\\n *\\n * @copyright Copyright (c) 2014, Google Inc.\\n * @link      http:\\/\\/www.google.com\\/recaptcha\\n *\\n * Ported to MODX by YJ Tso @sepiariver\\n *\\n * Permission is hereby granted, free of charge, to any person obtaining a copy\\n * of this software and associated documentation files (the \\"Software\\"), to deal\\n * in the Software without restriction, including without limitation the rights\\n * to use, copy, modify, merge, publish, distribute, sublicense, and\\/or sell\\n * copies of the Software, and to permit persons to whom the Software is\\n * furnished to do so, subject to the following conditions:\\n *\\n * The above copyright notice and this permission notice shall be included in\\n * all copies or substantial portions of the Software.\\n *\\n * THE SOFTWARE IS PROVIDED \\"AS IS\\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\\n * THE SOFTWARE.\\n *\\/\\n\\n\\/\\/ Require hook object\\nif (!$hook) {\\n    $modx->log(modX::LOG_LEVEL_ERROR, \'RecaptchaV3 requires hook object.\');\\n    return;\\n}\\n\\n\\/\\/ Register API keys at https:\\/\\/www.google.com\\/recaptcha\\/admin\\n$props[\'site_key\'] = $modx->getOption(\'recaptchav3.site_key\', null, \'\');\\n$props[\'secret_key\'] = $modx->getOption(\'recaptchav3.secret_key\', null, \'\');\\n\\/\\/ reCAPTCHA supported 40+ languages listed here: https:\\/\\/developers.google.com\\/recaptcha\\/docs\\/language\\n$props[\'lang\'] = $modx->getOption(\'cultureKey\', null, \'en\');\\n\\/\\/ https:\\/\\/developers.google.com\\/recaptcha\\/docs\\/v3 \\"Actions\\"\\n$props[\'action_key\'] = $modx->getOption(\'recaptchav3.action_key\', null, \'recaptcha-action\', true);\\n$props[\'token_key\'] = $modx->getOption(\'recaptchav3.token_key\', null, \'recaptcha-token\', true);\\n\\n\\/\\/ Options\\n$hookConfig = [];\\nif ($hook->formit) {\\n    $hookConfig = $hook->formit->config;\\n} elseif ($hook->login) {\\n    $hookConfig = $hook->login->controller->config;\\n}\\nforeach ($hookConfig as $k => $v) {\\n    if (strpos($k, \'recaptchav3.\') === 0) {\\n        $k = substr($k, 12);\\n        $props[$k] = $v;\\n    }\\n}\\n\\n\\/\\/ Defaults\\n$props[\'threshold\'] = floatval($modx->getOption(\'threshold\', $props, 0.5, true));\\n$props[\'display_resp_errors\'] = $modx->getOption(\'display_resp_errors\', $props, true);\\n$props[\'ip\'] = $modx->getOption(\'HTTP_CF_CONNECTING_IP\', $_SERVER, $_SERVER[\'REMOTE_ADDR\'], true);\\n\\n\\/\\/ make sure the modLexicon class is loaded by instantiating\\n$modx->getService(\'lexicon\',\'modLexicon\');\\n\\/\\/ load lexicon\\n$modx->lexicon->load(\'recaptchav2:default\');\\n\\/\\/ get the message from default.inc.php from the correct lang\\n$tech_err_msg = $modx->lexicon(\'recaptchav2.technical_error_message\');\\n$recaptcha_err_msg = $modx->lexicon(\'recaptchav2.recaptchav3_error_message\');\\n\\n\\/\\/ Get the class\\n$recaptchaPath = $modx->getOption(\'recaptchav2.core_path\', null, $modx->getOption(\'core_path\') . \'components\\/recaptchav2\\/\');\\n$recaptchaPath .= \'model\\/recaptchav2\\/\';\\nif (!file_exists($recaptchaPath . \'autoload.php\')) {\\n    $modx->log(modX::LOG_LEVEL_ERROR, \'Cannot find required Recaptcha autoload.php file.\');\\n    return false;\\n}\\nrequire_once($recaptchaPath . \'autoload.php\');\\ntry {\\n    $recaptcha = new \\\\ReCaptcha\\\\ReCaptcha($props[\'secret_key\'], new \\\\ReCaptcha\\\\RequestMethod\\\\CurlPost());\\n} catch (Exception $e) {\\n    $modx->log(modX::LOG_LEVEL_ERROR, \'Failed to load Recaptcha class.\');\\n    return false;\\n}\\n\\nif (!($recaptcha instanceof \\\\ReCaptcha\\\\ReCaptcha)) {\\n    $hook->addError(\'recaptchav3_error\', $tech_err_msg);\\n    $modx->log(modX::LOG_LEVEL_ERROR, \'Failed to load Recaptcha class.\');\\n    return false;\\n}\\n\\n\\/\\/ The response from reCAPTCHA\\n$resp = null;\\n\\/\\/ The error code from reCAPTCHA, if any\\n$error = null;\\n\\n\\/\\/ Was there a reCAPTCHA response?\\nif ($hook->getValue($props[\'token_key\'])) {\\n    $resp = $recaptcha->setExpectedHostname(parse_url($modx->getOption(\'site_url\'), PHP_URL_HOST))\\n              ->setExpectedAction($hook->getValue($props[\'action_key\']))\\n              ->setScoreThreshold($props[\'threshold\'])\\n              ->verify($hook->getValue($props[\'token_key\']), $props[\'ip\']);\\n\\n}\\n\\n\\/\\/ Hook pass\\/fail\\nif ($resp != null && $resp->isSuccess()) {\\n    return true;\\n} else {\\n    $msg = \'\';\\n    if ($props[\'display_resp_errors\']) {\\n        foreach ($resp->getErrorCodes() as $error) {\\n            $msg .= $error . \\"\\\\n\\";\\n        }\\n    }\\n    if (empty($msg)) $msg = $recaptcha_err_msg;\\n    $hook->addError(\'recaptchav3_error\', $msg);\\n    $modx->log(modX::LOG_LEVEL_DEBUG, print_r($resp, true));\\n    return false;\\n}\\n\\n\\n\\/\\/ Checks failed\\nreturn false;"}',
        'guid' => '47dd40b547c3f406c80118e798cc9b8c',
        'native_key' => NULL,
        'signature' => 'ac158dae2def69c9e2a76d0db275ab90',
      ),
      '3e27a07e9d93bb62683521ffc00e514d' => 
      array (
        'preserve_keys' => false,
        'update_object' => true,
        'unique_key' => 'name',
        'class' => 'modSnippet',
        'object' => '{"id":null,"source":0,"property_preprocess":0,"name":"recaptchav3_render","description":"","editor_type":0,"category":0,"cache_type":0,"snippet":"\\/**\\n * Renders ReCaptcha V3 form\\n *\\n * Based on https:\\/\\/github.com\\/google\\/recaptcha\\n *\\n * @copyright Copyright (c) 2014, Google Inc.\\n * @link      http:\\/\\/www.google.com\\/recaptcha\\n *\\n * Ported to MODX by YJ Tso @sepiariver\\n *\\n * Permission is hereby granted, free of charge, to any person obtaining a copy\\n * of this software and associated documentation files (the \\"Software\\"), to deal\\n * in the Software without restriction, including without limitation the rights\\n * to use, copy, modify, merge, publish, distribute, sublicense, and\\/or sell\\n * copies of the Software, and to permit persons to whom the Software is\\n * furnished to do so, subject to the following conditions:\\n *\\n * The above copyright notice and this permission notice shall be included in\\n * all copies or substantial portions of the Software.\\n *\\n * THE SOFTWARE IS PROVIDED \\"AS IS\\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\\n * THE SOFTWARE.\\n *\\/\\n\\n\\/\\/ Register API keys at https:\\/\\/www.google.com\\/recaptcha\\/admin\\n$site_key = $modx->getOption(\'recaptchav3.site_key\', null, \'\');\\n\\/\\/ reCAPTCHA supported 40+ languages listed here: https:\\/\\/developers.google.com\\/recaptcha\\/docs\\/language\\n$lang = $modx->getOption(\'cultureKey\', null, \'en\', true);\\n\\/\\/ https:\\/\\/developers.google.com\\/recaptcha\\/docs\\/v3 \\"Actions\\"\\n$action_key = $modx->getOption(\'action_key\', $scriptProperties, $modx->getOption(\'recaptchav3.action_key\', null, \'recaptcha-action\', true), true);\\n\\n$token_key = $modx->getOption(\'token_key\', $scriptProperties, $modx->getOption(\'recaptchav3.token_key\', null, \'recaptcha-token\', true), true);\\n\\n\\/\\/ new \'recaptchav3_html\' Chunk\\n$tpl = $modx->getOption(\'tpl\', $scriptProperties, \'recaptchav3_html\', true);\\n$form_id = $modx->getOption(\'form_id\', $scriptProperties, $modx->resource->get(\'uri\'));\\n\\n$recaptcha_html = $modx->getChunk($tpl, [\\n    \'site_key\' => $site_key,\\n    \'lang\' => $lang,\\n    \'form_id\' => preg_replace(\'\\/[^A-Za-z\\\\\\/_]\\/\', \'\', $form_id),\\n    \'action_key\' => $action_key,\\n    \'token_key\' => $token_key,\\n]);\\n\\nreturn $recaptcha_html;","locked":0,"properties":"a:0:{}","moduleguid":"","static":0,"static_file":"","content":"\\/**\\n * Renders ReCaptcha V3 form\\n *\\n * Based on https:\\/\\/github.com\\/google\\/recaptcha\\n *\\n * @copyright Copyright (c) 2014, Google Inc.\\n * @link      http:\\/\\/www.google.com\\/recaptcha\\n *\\n * Ported to MODX by YJ Tso @sepiariver\\n *\\n * Permission is hereby granted, free of charge, to any person obtaining a copy\\n * of this software and associated documentation files (the \\"Software\\"), to deal\\n * in the Software without restriction, including without limitation the rights\\n * to use, copy, modify, merge, publish, distribute, sublicense, and\\/or sell\\n * copies of the Software, and to permit persons to whom the Software is\\n * furnished to do so, subject to the following conditions:\\n *\\n * The above copyright notice and this permission notice shall be included in\\n * all copies or substantial portions of the Software.\\n *\\n * THE SOFTWARE IS PROVIDED \\"AS IS\\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\\n * THE SOFTWARE.\\n *\\/\\n\\n\\/\\/ Register API keys at https:\\/\\/www.google.com\\/recaptcha\\/admin\\n$site_key = $modx->getOption(\'recaptchav3.site_key\', null, \'\');\\n\\/\\/ reCAPTCHA supported 40+ languages listed here: https:\\/\\/developers.google.com\\/recaptcha\\/docs\\/language\\n$lang = $modx->getOption(\'cultureKey\', null, \'en\', true);\\n\\/\\/ https:\\/\\/developers.google.com\\/recaptcha\\/docs\\/v3 \\"Actions\\"\\n$action_key = $modx->getOption(\'action_key\', $scriptProperties, $modx->getOption(\'recaptchav3.action_key\', null, \'recaptcha-action\', true), true);\\n\\n$token_key = $modx->getOption(\'token_key\', $scriptProperties, $modx->getOption(\'recaptchav3.token_key\', null, \'recaptcha-token\', true), true);\\n\\n\\/\\/ new \'recaptchav3_html\' Chunk\\n$tpl = $modx->getOption(\'tpl\', $scriptProperties, \'recaptchav3_html\', true);\\n$form_id = $modx->getOption(\'form_id\', $scriptProperties, $modx->resource->get(\'uri\'));\\n\\n$recaptcha_html = $modx->getChunk($tpl, [\\n    \'site_key\' => $site_key,\\n    \'lang\' => $lang,\\n    \'form_id\' => preg_replace(\'\\/[^A-Za-z\\\\\\/_]\\/\', \'\', $form_id),\\n    \'action_key\' => $action_key,\\n    \'token_key\' => $token_key,\\n]);\\n\\nreturn $recaptcha_html;"}',
        'guid' => 'a618d50d813683027f6de5d18fc7f9ac',
        'native_key' => NULL,
        'signature' => '74d30833fd81416fa87d89da42a7529e',
      ),
    ),
  ),
  'related_object_attributes' => 
  array (
    'Children' => 
    array (
      'preserve_keys' => false,
      'update_object' => true,
      'unique_key' => 
      array (
        0 => 'parent',
        1 => 'category',
      ),
    ),
    'Snippets' => 
    array (
      'preserve_keys' => false,
      'update_object' => true,
      'unique_key' => 'name',
    ),
    'Chunks' => 
    array (
      'preserve_keys' => false,
      'update_object' => true,
      'unique_key' => 'name',
    ),
    'Templates' => 
    array (
      'preserve_keys' => false,
      'update_object' => true,
      'unique_key' => 'templatename',
    ),
    'TemplateVars' => 
    array (
      'preserve_keys' => false,
      'update_object' => true,
      'unique_key' => 'name',
    ),
    'Plugins' => 
    array (
      'unique_key' => 'name',
      'preserve_keys' => false,
      'update_object' => true,
      'related_objects' => true,
      'related_object_attributes' => 
      array (
        'PluginEvents' => 
        array (
          'preserve_keys' => true,
          'update_object' => false,
          'unique_key' => 
          array (
            0 => 'pluginid',
            1 => 'event',
          ),
        ),
      ),
    ),
  ),
  'namespace' => 'recaptchav2',
  'resolve' => 
  array (
    0 => 
    array (
      'type' => 'file',
      'body' => '{"source":"recaptchav2-3.1.0-rc1\\/modCategory\\/101bb7deb11a04a9a21aa9d74e2d5cc6\\/0\\/","target":"return MODX_ASSETS_PATH . \'components\\/\';","name":"recaptchav2"}',
    ),
    1 => 
    array (
      'type' => 'file',
      'body' => '{"source":"recaptchav2-3.1.0-rc1\\/modCategory\\/101bb7deb11a04a9a21aa9d74e2d5cc6\\/1\\/","target":"return MODX_CORE_PATH . \'components\\/\';","name":"recaptchav2"}',
    ),
  ),
  'validate' => NULL,
  'vehicle_package' => 'transport',
  'vehicle_class' => 'xPDOObjectVehicle',
  'guid' => 'dd6f4596850a8e5e3f8204c43f001233',
  'package' => 'modx',
  'class' => 'modCategory',
  'signature' => '101bb7deb11a04a9a21aa9d74e2d5cc6',
  'native_key' => NULL,
  'object' => '{"id":null,"parent":0,"category":"ReCaptchaV2","rank":0}',
);